import React from 'react';
import { NativeSelectProps } from './NativeSelect';
import { EnhancedSelectProps } from './EnhancedSelect';
import { MDCSelectFoundation } from '@material/select/foundation';
export declare type BaseSelectProps<T extends HTMLElement> = T extends HTMLSelectElement ? NativeSelectProps : EnhancedSelectProps;
export interface CommonSelectProps {
    enhanced: boolean;
    className?: string;
    disabled?: boolean;
    foundation?: MDCSelectFoundation;
    value?: string;
    selectClassName?: string;
}
export declare class BaseSelect<T extends HTMLElement = HTMLSelectElement> extends React.Component<BaseSelectProps<T>> {
    static defaultProps: {
        enhanced: boolean;
        selectClassName: string;
    };
    handleFocus: (evt: React.FocusEvent<T>) => void;
    handleBlur: (evt: React.FocusEvent<T>) => void;
    handleTouchStart: (evt: React.TouchEvent<T>) => void;
    handleMouseDown: (evt: React.MouseEvent<T, MouseEvent>) => void;
    handleClick: (evt: React.MouseEvent<T, MouseEvent>) => void;
    handleKeyDown: (evt: React.KeyboardEvent<T>) => void;
    private isTouchEvent;
    private getNormalizedXCoordinate;
    render(): JSX.Element;
}
