import * as React from 'react';
import { MDCMenuFoundation } from '@material/menu/foundation';
import { MDCMenuAdapter } from '@material/menu/adapter';
import { MenuSurfaceProps } from '@material/react-menu-surface';
import MenuList from './MenuList';
import MenuListItem from './MenuListItem';
export interface MenuProps extends MenuSurfaceProps {
    children: React.ReactElement<MenuList>;
    onSelected?: (index: number, item: Element) => void;
    ref?: React.Ref<any>;
}
export interface MenuState {
    open: boolean;
    foundation?: MDCMenuFoundation;
}
declare class Menu extends React.Component<MenuProps, MenuState> {
    menuListElement: React.RefObject<MenuList>;
    state: MenuState;
    static defaultProps: Partial<MenuProps>;
    componentDidMount(): void;
    componentDidUpdate(prevProps: MenuProps): void;
    componentWillUnmount(): void;
    readonly listElements: Element[];
    readonly adapter: MDCMenuAdapter;
    handleKeyDown: React.KeyboardEventHandler<HTMLDivElement>;
    handleOpen: MenuSurfaceProps['onOpen'];
    render(): JSX.Element;
    renderChild(): React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | undefined;
}
export default Menu;
export { MenuList, MenuListItem };
export { ListDivider as MenuListDivider, ListGroup as MenuListGroup, ListGroupSubheader as MenuListGroupSubheader, ListItemGraphic as MenuListItemGraphic, ListItemMeta as MenuListItemMeta, ListItemText as MenuListItemText, } from '@material/react-list';
export { MenuListProps } from './MenuList';
export { MenuListItemProps } from './MenuListItem';
