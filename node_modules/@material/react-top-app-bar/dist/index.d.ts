import React from 'react';
import TopAppBarFixedAdjust, { TopAppbarFixedAdjustProps } from './FixedAdjust';
import TopAppBarSection from './Section';
import TopAppBarRow from './Row';
import TopAppBarTitle from './Title';
import TopAppBarIcon from './Icon';
import { MDCFixedTopAppBarFoundation } from '@material/top-app-bar/fixed/foundation';
import { MDCTopAppBarAdapter } from '@material/top-app-bar/adapter';
import { MDCTopAppBarFoundation } from '@material/top-app-bar/standard/foundation';
import { MDCShortTopAppBarFoundation } from '@material/top-app-bar/short/foundation';
export declare type MDCTopAppBarFoundationTypes = MDCFixedTopAppBarFoundation | MDCTopAppBarFoundation | MDCShortTopAppBarFoundation;
export interface TopAppBarProps<T> extends React.HTMLProps<T> {
    className?: string;
    dense?: boolean;
    fixed?: boolean;
    prominent?: boolean;
    short?: boolean;
    shortCollapsed?: boolean;
    style?: React.CSSProperties;
    scrollTarget?: React.RefObject<HTMLElement>;
    tag?: string;
    onNavIconClicked?: () => void;
}
interface TopAppBarState {
    classList: Set<string>;
    style: React.CSSProperties;
    scrollTarget?: React.RefObject<HTMLElement>;
}
export declare type VariantType = 'dense' | 'fixed' | 'prominent' | 'short' | 'shortCollapsed';
declare class TopAppBar<T extends HTMLElement = HTMLHeadingElement> extends React.Component<TopAppBarProps<T>, TopAppBarState> {
    topAppBarElement: React.RefObject<HTMLElement>;
    foundation: MDCTopAppBarFoundationTypes;
    state: TopAppBarState;
    static defaultProps: Partial<TopAppBarProps<HTMLHeadingElement>>;
    readonly classes: string;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prevProps: TopAppBarProps<T>, prevState: TopAppBarState): void;
    private initializeFoundation;
    getMergedStyles: () => React.CSSProperties;
    readonly adapter: MDCTopAppBarAdapter;
    render(): JSX.Element;
}
export default TopAppBar;
export { TopAppBarFixedAdjust, TopAppbarFixedAdjustProps, TopAppBarIcon, TopAppBarRow, TopAppBarSection, TopAppBarTitle, };
